{
  "script_name": "merge_sort.py",
  "class": { "class_runtime": [], "class_memory": [] },
  "function": {
    "function_runtime": [
      {
        "name": "merge_sort.py/mergeSort(arr)",
        "total_runtime": 14.5,
        "percent_runtime": 93
      },
      {
        "name": "merge_sort.py/validate(arr)",
        "total_runtime": 5.8,
        "percent_runtime": 7
      }
    ],
    "function_memory": [
      {
        "name": "merge_sort.py/mergeSort(arr)",
        "total_memory": 1.8,
        "percent_memory": 90
      },
      {
        "name": "merge_sort.py/validate(arr)",
        "total_memory": 0.2,
        "percent_memory": 10
      }
    ]
  },
  "line_by_line": [
    [
      {
        "fileName": "merge_sort.py",
        "line_num": 1,
        "code": "import sys",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 2,
        "code": "import random",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 3,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 4,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 5,
        "code": "def mergeSort(arr):",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 6,
        "code": "    if len(arr) > 1:",
        "total_runtime": 5.8,
        "total_memory": 0.0,
        "percent_runtime": 2,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 7,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 8,
        "code": "        # Finding the mid of the array",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 9,
        "code": "        mid = len(arr) // 2",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 10,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 11,
        "code": "        # Dividing the array elements",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 12,
        "code": "        L = arr[:mid]",
        "total_runtime": 17.4,
        "total_memory": 1.0,
        "percent_runtime": 6,
        "percent_memory": 11.11111111111111
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 13,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 14,
        "code": "        # into 2 halves",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 15,
        "code": "        R = arr[mid:]",
        "total_runtime": 8.7,
        "total_memory": 1.0,
        "percent_runtime": 3,
        "percent_memory": 11.11111111111111
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 16,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 17,
        "code": "        # Sorting the first half",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 18,
        "code": "        mergeSort(L)",
        "total_runtime": 14.5,
        "total_memory": 0.0,
        "percent_runtime": 5,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 19,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 20,
        "code": "        # Sorting the second half",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 21,
        "code": "        mergeSort(R)",
        "total_runtime": 11.6,
        "total_memory": 0.0,
        "percent_runtime": 4,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 22,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 23,
        "code": "        i = j = k = 0",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 24,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 25,
        "code": "        # Copy data to temp arrays L[] and R[]",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 26,
        "code": "        while i < len(L) and j < len(R):",
        "total_runtime": 72.5,
        "total_memory": 0.0,
        "percent_runtime": 25,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 27,
        "code": "            if L[i] < R[j]:",
        "total_runtime": 52.199999999999996,
        "total_memory": 0.0,
        "percent_runtime": 18,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 28,
        "code": "                arr[k] = L[i]",
        "total_runtime": 23.2,
        "total_memory": 0.0,
        "percent_runtime": 8,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 29,
        "code": "                i += 1",
        "total_runtime": 8.7,
        "total_memory": 3.0,
        "percent_runtime": 3,
        "percent_memory": 33.33333333333333
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 30,
        "code": "            else:",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 31,
        "code": "                arr[k] = R[j]",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 32,
        "code": "                j += 1",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 33,
        "code": "            k += 1",
        "total_runtime": 29.0,
        "total_memory": -2.0,
        "percent_runtime": 10,
        "percent_memory": -22.22222222222222
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 34,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 35,
        "code": "        # Checking if any element was left",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 36,
        "code": "        while i < len(L):",
        "total_runtime": 17.4,
        "total_memory": 0.0,
        "percent_runtime": 6,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 37,
        "code": "            arr[k] = L[i]",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 38,
        "code": "            i += 1",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 39,
        "code": "            k += 1",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 40,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 41,
        "code": "        while j < len(R):",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 42,
        "code": "            arr[k] = R[j]",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 43,
        "code": "            j += 1",
        "total_runtime": 8.7,
        "total_memory": 0.0,
        "percent_runtime": 3,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 44,
        "code": "            k += 1",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 45,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 46,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 47,
        "code": "# Code to print the list",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 48,
        "code": "def validate(arr):",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 49,
        "code": "    for i in range(len(arr) - 1):",
        "total_runtime": 5.8,
        "total_memory": -2.0,
        "percent_runtime": 2,
        "percent_memory": -22.22222222222222
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 50,
        "code": "        if arr[i] > arr[i + 1]:",
        "total_runtime": 8.7,
        "total_memory": 2.0,
        "percent_runtime": 3,
        "percent_memory": 22.22222222222222
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 51,
        "code": "            return False",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 52,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 53,
        "code": "    return True",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 54,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 55,
        "code": "",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 56,
        "code": "# Driver code to test above",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 57,
        "code": "if __name__ == \"__main__\":",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 58,
        "code": "    A = []",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 59,
        "code": "    for a in range(int(sys.argv[1])):",
        "total_runtime": 0.0,
        "total_memory": 1.0,
        "percent_runtime": 0,
        "percent_memory": 11.11111111111111
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 60,
        "code": "        A.append(random.random() * 1000)",
        "total_runtime": 11.6,
        "total_memory": 1.0,
        "percent_runtime": 4,
        "percent_memory": 11.11111111111111
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 61,
        "code": "    mergeSort(A)",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 62,
        "code": "    if not validate(A):",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 63,
        "code": "        print(\"Wrong output\")",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 64,
        "code": "    else:",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      },
      {
        "fileName": "merge_sort.py",
        "line_num": 65,
        "code": "        print(\"Finished with correct output\")",
        "total_runtime": 0.0,
        "total_memory": 0.0,
        "percent_runtime": 0,
        "percent_memory": 0.0
      }
    ]
  ],
  "e2e": {
    "e2e_runtime": [
      {
        "n": 500,
        "total_runtime": 5.05,
        "O(1)": 4.82,
        "O(log(n))": 0.0,
        "O(n)": 11.14,
        "O(n\u00b2)": 17.58,
        "O(n\u00b3)": 23.86,
        "O(nlog(n))": 13.02,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      },
      {
        "n": 1000,
        "total_runtime": 4.82,
        "O(1)": 4.82,
        "O(log(n))": 0.0,
        "O(n)": 11.84,
        "O(n\u00b2)": 18.97,
        "O(n\u00b3)": 25.94,
        "O(nlog(n))": 13.82,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      },
      {
        "n": 5000,
        "total_runtime": 5.32,
        "O(1)": 4.82,
        "O(log(n))": 0.0,
        "O(n)": 13.45,
        "O(n\u00b2)": 22.19,
        "O(n\u00b3)": 30.77,
        "O(nlog(n))": 15.63,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      },
      {
        "n": 10000,
        "total_runtime": 5.68,
        "O(1)": 4.82,
        "O(log(n))": 0.0,
        "O(n)": 14.14,
        "O(n\u00b2)": 23.57,
        "O(n\u00b3)": 32.85,
        "O(nlog(n))": 16.41,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      },
      {
        "n": 20000,
        "total_runtime": 5.95,
        "O(1)": 4.82,
        "O(log(n))": 0.0,
        "O(n)": 14.83,
        "O(n\u00b2)": 24.96,
        "O(n\u00b3)": 34.93,
        "O(nlog(n))": 17.17,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      }
    ],
    "e2e_memory": [
      {
        "n": 500,
        "total_memory": 2,
        "O(1)": 1,
        "O(log(n))": 0.0,
        "O(n)": 2.3,
        "O(n\u00b2)": 4.9,
        "O(n\u00b3)": 18.1,
        "O(nlog(n))": 13.02,
        "O(n\u207f)": 32.39,
        "O(n!)": 0.0
      },
      {
        "n": 1000,
        "total_memory": 2.9,
        "O(1)": 1,
        "O(log(n))": 0.0,
        "O(n)": 3.0,
        "O(n\u00b2)": 8.8,
        "O(n\u00b3)": 27,
        "O(nlog(n))": 13.82,
        "O(n\u207f)": 36,
        "O(n!)": 0.0
      },
      {
        "n": 5000,
        "total_memory": 4.1,
        "O(1)": 1,
        "O(log(n))": 0.0,
        "O(n)": 3.95,
        "O(n\u00b2)": 16.21,
        "O(n\u00b3)": 41,
        "O(nlog(n))": 22,
        "O(n\u207f)": 62.3,
        "O(n!)": 0.0
      },
      {
        "n": 10000,
        "total_memory": 5.5,
        "O(1)": 1,
        "O(log(n))": 0.0,
        "O(n)": 5.25,
        "O(n\u00b2)": 23.57,
        "O(n\u00b3)": 68.2,
        "O(nlog(n))": 19.5,
        "O(n\u207f)": 99.3,
        "O(n!)": 0.0
      },
      {
        "n": 20000,
        "total_memory": 6.8,
        "O(1)": 1,
        "O(log(n))": 0.0,
        "O(n)": 7.05,
        "O(n\u00b2)": 31,
        "O(n\u00b3)": 65.5,
        "O(nlog(n))": 27.2,
        "O(n\u207f)": 150.3,
        "O(n!)": 0.0
      }
    ],
    "e2e_highest_runtime_function": "mergeSort(arr)",
    "e2e_highest_memory_usage_function": "mergeSort(arr)",
    "e2e_total_average_time": 233.0,
    "e2e_total_average_memory": 2.0,
    "e2e_time_complexity": "nlogn",
    "e2e_space_complexity": "n"
  },
  "sankey": {
    "sankey_runtime": {
      "nodes": [{ "name": "mergeSort(arr)" }, { "name": "validate(arr)" }],
      "links": []
    },
    "sankey_memory": {
      "nodes": [{ "name": "mergeSort(arr)" }, { "name": "validate(arr)" }],
      "links": []
    }
  }
}
